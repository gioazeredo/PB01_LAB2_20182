// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGLC.Infrastructure.Data;

namespace SGLC.Infrastructure.Migrations
{
    [DbContext(typeof(SGLCContext))]
    [Migration("20181211031132_Inicio")]
    partial class Inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGLC.ApplicationCore.Entity.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Email = "Geovane@teste.com",
                            Nome = "Geovani"
                        });
                });

            modelBuilder.Entity("SGLC.ApplicationCore.Entity.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("ClienteId");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(10)");

                    b.HasKey("EnderecoId");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Endereco");

                    b.HasData(
                        new
                        {
                            EnderecoId = 1,
                            Bairro = "CPA V",
                            CEP = "78058-55",
                            ClienteId = 1,
                            Logradouro = "Rua 12312, Quandra 1323123",
                            Numero = "22"
                        });
                });

            modelBuilder.Entity("SGLC.ApplicationCore.Entity.Locacao", b =>
                {
                    b.Property<int>("LocacaoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("DataLocacao");

                    b.Property<int>("Numero");

                    b.HasKey("LocacaoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Locacoes");

                    b.HasData(
                        new
                        {
                            LocacaoId = 1,
                            ClienteId = 1,
                            DataLocacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Numero = 1
                        });
                });

            modelBuilder.Entity("SGLC.ApplicationCore.Entity.LocacaoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LocacaoId");

                    b.Property<int>("VeiculoId");

                    b.HasKey("Id");

                    b.HasIndex("LocacaoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("LocacaoVeiculos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocacaoId = 1,
                            VeiculoId = 1
                        });
                });

            modelBuilder.Entity("SGLC.ApplicationCore.Entity.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(200)");

                    b.HasKey("MarcaId");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            MarcaId = 1,
                            Descricao = "VW"
                        });
                });

            modelBuilder.Entity("SGLC.ApplicationCore.Entity.Veiculo", b =>
                {
                    b.Property<int>("VeiculoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("MarcaId");

                    b.Property<string>("Placa")
                        .HasColumnType("varchar(20)");

                    b.HasKey("VeiculoId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Veiculos");

                    b.HasData(
                        new
                        {
                            VeiculoId = 1,
                            Descricao = "asdasd21",
                            MarcaId = 1,
                            Placa = "ABC-1234"
                        });
                });

            modelBuilder.Entity("SGLC.ApplicationCore.Entity.Endereco", b =>
                {
                    b.HasOne("SGLC.ApplicationCore.Entity.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("SGLC.ApplicationCore.Entity.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGLC.ApplicationCore.Entity.Locacao", b =>
                {
                    b.HasOne("SGLC.ApplicationCore.Entity.Cliente", "Cliente")
                        .WithMany("Locacao")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGLC.ApplicationCore.Entity.LocacaoVeiculo", b =>
                {
                    b.HasOne("SGLC.ApplicationCore.Entity.Locacao", "Locacao")
                        .WithMany()
                        .HasForeignKey("LocacaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGLC.ApplicationCore.Entity.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGLC.ApplicationCore.Entity.Veiculo", b =>
                {
                    b.HasOne("SGLC.ApplicationCore.Entity.Marca", "Marca")
                        .WithMany("Veiculo")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
